{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Introduction:\
This is a Java program that reads from an input file named "inPoem.txt" located in the current directory, and analyzes the words found in the file. The program will display a sorted list of words in ascending order, the frequency of each word in the input file, and whether each word is a palindrome or not.\
The program uses an ArrayList or parallel arrays to hold the list of words, their frequency, and palindrome status. The program discards any punctuation that may follow a word, such as end of sentence punctuation or basic punctuation.\
The program includes 3 .java files, one for the InputFile class, one for the Analysis class, and one for the main() method.\
Instructions:\
To run the program, simply execute the Main.java file. The program will read from the "inPoem.txt" file located in the current directory, analyze the words found in the file, and display the output.\
Assumptions:\
For this project, it is assumed that the input file contains only words and standard English punctuation, and that the file is located in the current directory.\
Conclusion:\
This project demonstrates the use of ArrayLists, parallel arrays, and object-oriented programming principles in Java. The program can be expanded to include additional features such as word length analysis, frequency histograms, and more advanced palindrome detection algorithms.\
}