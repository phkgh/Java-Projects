{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Introduction:\
This is a Java program that demonstrates the use of multiple classes and good object-oriented programming principles. The program prompts the user with a menu asking them to select a shape (circle, rectangle, triangle, ellipse, trapezoid, or cylinder).\
The program creates an object of the selected shape's class, which has private members and methods for calculating and returning the area of the shape. The program validates all user input values, uses units of measurement when prompting for input data and displaying output, and makes PI a constant variable.\
The program includes 4 .java files, one for each shape's class and one for the main() method.\
Instructions:\
To run the program, simply execute the Main.java file. The program will prompt the user with a menu asking them to select a shape. The program will then create an object of the selected shape's class, prompt the user for input values (e.g. radius, length, width, base, height, etc.), validate the input, and calculate and display the area of the shape.\
Assumptions:\
For this project, it is assumed that the user will enter valid input. The program uses units of measurement specified in the prompt, and the value of PI is set to 3.14159.\
Conclusion:\
This project demonstrates the use of good object-oriented programming principles and the creation of multiple classes in Java. The program can be expanded to include additional shapes and more complex calculations, as well as additional features like input validation and unit conversion.\
}